
// This code was generated by Hypar.
// Edits to this code will be overwritten the next time you run 'hypar test generate'.
// DO NOT EDIT THIS FILE.

using Elements;
using Xunit;
using System.IO;
using System.Collections.Generic;
using Elements.Serialization.glTF;

namespace NYCZR8127DaylightEvaluation
{
    public class ZoningExampleModelAsMeshElement
    {
        [Fact]
        public void TestExecute()
        {
            var input = GetInput();

            var modelDependencies = new Dictionary<string, Model> {
                {"Envelope", Model.FromJson(File.ReadAllText(@"/Users/serenali/Hypar Dropbox/Serena Li/Functions/Daylight Evaluation Functions/CSharpVersion/NYCZR8127DaylightEvaluation/test/Generated/ZoningExampleModelAsMeshElement/model_dependencies/Envelope/model.json")) },
                {"Site", Model.FromJson(File.ReadAllText(@"/Users/serenali/Hypar Dropbox/Serena Li/Functions/Daylight Evaluation Functions/CSharpVersion/NYCZR8127DaylightEvaluation/test/Generated/ZoningExampleModelAsMeshElement/model_dependencies/Site/model.json")) },
            };

            var result = NYCZR8127DaylightEvaluation.Execute(modelDependencies, input);
            result.Model.ToGlTF("../../../Generated/ZoningExampleModelAsMeshElement/results/ZoningExampleModelAsMeshElement.gltf", false);
            result.Model.ToGlTF("../../../Generated/ZoningExampleModelAsMeshElement/results/ZoningExampleModelAsMeshElement.glb");
            File.WriteAllText("../../../Generated/ZoningExampleModelAsMeshElement/results/ZoningExampleModelAsMeshElement.json", result.Model.ToJson());

            Assert.True(result.OverallDaylightScore.ToString().StartsWith("72.4569"));
        }

        public NYCZR8127DaylightEvaluationInputs GetInput()
        {
            var inputText = @"
            {
  ""model_input_keys"": {
    ""Envelope"": ""dee43b02-fa54-4d7a-8927-db298dc275bb_6b2fa817-e74f-42af-abae-28b80745f699_elements.zip"",
    ""Site"": ""2ce1ef37-340d-4377-94e6-75f3ec3fa97e_c6b5241e-fef1-47a9-a167-fc71ddd30cb3_elements.zip""
  },
  ""Qualify for East Midtown Subdistrict"": false,
  ""Skip Subdivide"": false,
  ""Vantage Streets"": [
    {
      ""Line"": {
        ""Start"": {
          ""X"": -9.414115113961998,
          ""Y"": -6.657362363463527,
          ""Z"": 0
        },
        ""End"": {
          ""X"": 54.5292381469595,
          ""Y"": -7.044436877127744,
          ""Z"": 0
        },
        ""discriminator"": ""Elements.Geometry.Line""
      },
      ""Block Depth In Feet"": 200,
      ""Street Wall Continuity"": false,
      ""Width"": ""100ft"",
      ""Name"": ""My Street Name""
    }
  ],
  ""Debug Visualization"": false
}
            ";
            return Newtonsoft.Json.JsonConvert.DeserializeObject<NYCZR8127DaylightEvaluationInputs>(inputText);
        }
    }
}